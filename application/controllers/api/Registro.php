<?php 
/*
    Generated by Manuigniter v2.0 
    www.manuigniter.com
*/
use Restserver\Libraries\REST_Controller;
defined('BASEPATH') OR exit('No direct script access allowed');
require APPPATH . '/libraries/REST_Controller.php';
require APPPATH . 'libraries/Format.php';
class Registro extends REST_Controller{
 function __construct()
 {
       parent::__construct();
      $this->load->model('Registro_model');
 } 
 /*
* Listing of registro
 */
public function get_all_post()
{
  try{
  $data['registro'] = $this->Registro_model->get_all_registro();
     if($data['registro'] && $data['registro']!=null){
       $registro_ar = array();
       foreach($data['registro'] as $r)
       {
       $r_ar = array();
       $r_ar['registro_id'] = $r['registro_id'];
       $r_ar['usuario_id'] = $r['usuario_id'];
       $r_ar['paciente_id'] = $r['paciente_id'];
       $r_ar['registro_fecha'] = $r['registro_fecha'];
       $r_ar['registro_hora'] = $r['registro_hora'];
       $r_ar['registro_mes'] = $r['registro_mes'];
       $r_ar['registro_gestion'] = $r['registro_gestion'];
       $r_ar['registro_diagnostico'] = $r['registro_diagnostico'];
       $registro_ar[] = $r_ar;
       }
       $response = array(
       'status' => 200,
       'message' => 'get all data Succesfully',
       'data' => $registro_ar,
       );
       $this->response($response, REST_Controller::HTTP_OK);
     }
     else{
       $response = array(
      'status' => 400,
      'message' => 'Detail is not found'
        );
       $this->response($response, REST_Controller::HTTP_OK); 
        }
       } catch (Exception $ex) {
             throw new Exception('Registro controller_name : Error in get_all_post function - ' . $ex);
        }  
}
 /*
  * Adding a new registro
  */
 function addnew_post()
 {  
  try{
      $params = array(
       'usuario_id'=> $this->input->post('usuario_id'),
       'paciente_id'=> $this->input->post('paciente_id'),
       'registro_fecha'=> $this->input->post('registro_fecha'),
       'registro_hora'=> $this->input->post('registro_hora'),
       'registro_mes'=> $this->input->post('registro_mes'),
       'registro_gestion'=> $this->input->post('registro_gestion'),
       'registro_diagnostico'=> $this->input->post('registro_diagnostico'),
        );
       $this->load->library('upload');
       $this->load->library('form_validation');
       if(isset($_POST) && count($_POST) > 0)     
        {  
            $registro_id= $this->Registro_model->add_registro($params);
   $data['registro'] = $this->Registro_model->get_registro($registro_id);
           $response = array(
            'status' => 200,
            'message' => 'Succesfully Added',
            'data' => $data
             );
           $this->response($response, REST_Controller::HTTP_OK);
        }
        else
        { 
           $response = array(
            'status' => 400,
            'message' => 'Not Added try again',
            'data' => ''
             );
           $this->response($response, REST_Controller::HTTP_OK);
        }
       } catch (Exception $ex) {
             throw new Exception('Registro controller_name : Error in new registro function - ' . $ex);
       }  
 }  
  /*
  * Editing a registro
 */
  function edit_post($registro_id)
 {   
  try{
   $data['registro'] = $this->Registro_model->get_registro($registro_id);
       $this->load->library('upload');
       $this->load->library('form_validation');
     if(isset($data['registro']['registro_id']))
      {
        $params = array(
           'usuario_id'=> $this->input->post('usuario_id'),
           'paciente_id'=> $this->input->post('paciente_id'),
           'registro_fecha'=> $this->input->post('registro_fecha'),
           'registro_hora'=> $this->input->post('registro_hora'),
           'registro_mes'=> $this->input->post('registro_mes'),
           'registro_gestion'=> $this->input->post('registro_gestion'),
           'registro_diagnostico'=> $this->input->post('registro_diagnostico'),
        );
          if(isset($_POST) && count($_POST) > 0)     
           {  
           $this->Registro_model->update_registro($registro_id,$params);
           $response = array(
            'status' => 200,
            'message' => 'Succesfully Updated',
            'data' => $registro_id
             );
           $this->response($response, REST_Controller::HTTP_OK);
           }
           else
          {
           $response = array(
            'status' => 400,
            'message' => 'Not Updated Try again',
            'data' => $registro_id
             );
           $this->response($response, REST_Controller::HTTP_OK);
          }
  }
       } catch (Exception $ex) {
             throw new Exception('Registro controller_name : Error in edit_post function - ' . $ex);
        }  
} 
/*
  * Deleting registro
  */
  function remove_post($registro_id)
   {
  try{
      $registro = $this->Registro_model->get_registro($registro_id);
  // check if the registro exists before trying to delete it
       if(isset($registro['registro_id']))
       {
         $this->Registro_model->delete_registro($registro_id);
           $response = array(
            'status' => 200,
            'message' => 'Succesfully Removed',
            'data' => $registro_id
             );
           $this->response($response, REST_Controller::HTTP_OK);
       }
       else
           $response = array(
            'status' => 400,
            'message' => 'Not Updated Try again',
            'data' => $registro_id
             );
           $this->response($response, REST_Controller::HTTP_OK);
       } catch (Exception $ex) {
             throw new Exception('Registro controller_name : Error in remove_post function - ' . $ex);
        }  
  }
 }
